import java.util.*;
public class BinarySearch_Iterative
{
    // Returns index of x if it is present in arr[], else
    // return -1
    int binarySearch(int arr[], int x)
    {
        int l = 0, r = arr.length - 1;
        while (l <= r) {
            int m = l + (r - l) / 2;
 
            // Check if x is present at mid
            if (arr[m] == x)
                return m;
 
            // If x greater, ignore left half
            if (arr[m] < x)
                l = m + 1;
 
            // If x is smaller, ignore right half
            else
                r = m - 1;
        }
 
        // if we reach here, then element was not present
        return -1;
    }
 
    // Driver method to test above
    public static void main(String args[])
    {
        Scanner sc =new Scanner(System.in);
        BinarySearch_Iterative ob = new BinarySearch_Iterative();
        int n,i;
        System.out.println("Enter the size of the array: ");
        n=sc.nextInt();
        int []arr=new int[n];
        System.out.println("Enter the elements of the array: ");
        for(i=0; i<n; i++)  
        {  
            //reading array elements from the user   
            arr[i]=sc.nextInt();  
        }  
        System.out.println("Enter the number to be searched");
        int x = sc.nextInt();
        int result = ob.binarySearch(arr, x);
        if (result == -1)
            System.out.println("Element not present");
        else
            System.out.println("Element found at index " + result);
    }
}
